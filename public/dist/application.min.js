"use strict";var ApplicationConfiguration=function(){var applicationModuleName="emmauswalkhousingandregistration",applicationModuleVendorDependencies=["ngResource","ngCookies","ui.router","ui.bootstrap","ui.utils","ngTable","formly","formlyBootstrap","ngSanitize","ngCsv"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("conf-room-tables",["core"]),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("pilgrim-rooms",["core"]),ApplicationConfiguration.registerModule("pilgrims",["core"]),ApplicationConfiguration.registerModule("team-rooms",["core"]),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("whole-team-lists",["core"]),angular.module("conf-room-tables").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Conf room tables","conf-room-tables","dropdown","/conf-room-tables(/create)?"),Menus.addSubMenuItem("topbar","conf-room-tables","List Conf room tables","conf-room-tables"),Menus.addSubMenuItem("topbar","conf-room-tables","New Conf room table","conf-room-tables/create")}]),angular.module("conf-room-tables").config(["$stateProvider",function($stateProvider){$stateProvider.state("listConfRoomTables",{url:"/conf-room-tables",templateUrl:"modules/conf-room-tables/views/list-conf-room-tables.client.view.html"}).state("createConfRoomTable",{url:"/conf-room-tables/create",templateUrl:"modules/conf-room-tables/views/create-conf-room-table.client.view.html"}).state("viewConfRoomTable",{url:"/conf-room-tables/:confRoomTableId",templateUrl:"modules/conf-room-tables/views/view-conf-room-table.client.view.html"}).state("editConfRoomTable",{url:"/conf-room-tables/:confRoomTableId/edit",templateUrl:"modules/conf-room-tables/views/edit-conf-room-table.client.view.html"})}]),angular.module("conf-room-tables").controller("ConfRoomTablesController",["$scope","$stateParams","$location","Authentication","ConfRoomTables","TableSettings","ConfRoomTablesForm",function($scope,$stateParams,$location,Authentication,ConfRoomTables,TableSettings,ConfRoomTablesForm){$scope.authentication=Authentication,$scope.tableParams=TableSettings.getParams(ConfRoomTables),$scope.confRoomTable={},$scope.setFormFields=function(disabled){$scope.formFields=ConfRoomTablesForm.getFormFields(disabled)},$scope.cvsMe=function(tableData){var keysS=[];return angular.forEach(tableData[0],function(value,key){this.push(key)},keysS),console.log(keysS),tableData.unshift(keysS),tableData},$scope.pushDataToMainTables=function(tableData){},$scope.create=function(){var confRoomTable=new ConfRoomTables($scope.confRoomTable);confRoomTable.$save(function(response){$location.path("conf-room-tables/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(confRoomTable){confRoomTable?confRoomTable=ConfRoomTables.get({confRoomTableId:confRoomTable._id},function(){confRoomTable.$remove(),$scope.tableParams.reload()}):$scope.confRoomTable.$remove(function(){$location.path("confRoomTables")})},$scope.update=function(){var confRoomTable=$scope.confRoomTable;confRoomTable.$update(function(){$location.path("conf-room-tables/"+confRoomTable._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.toViewConfRoomTable=function(){$scope.confRoomTable=ConfRoomTables.get({confRoomTableId:$stateParams.confRoomTableId}),$scope.setFormFields(!0)},$scope.toEditConfRoomTable=function(){$scope.confRoomTable=ConfRoomTables.get({confRoomTableId:$stateParams.confRoomTableId}),$scope.setFormFields(!1)}}]),angular.module("conf-room-tables").directive("confRoomPilgrimMemberName",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var link=function(scope,element,attrs){if(attrs.memberid)if("Empty"==attrs.memberid)scope.localPilgrim="Empty";else var nowWholeList=$resource("/pilgrims/"+attrs.memberid),answer=nowWholeList.get(function(){console.log(answer),scope.localPilgrim=answer.FirstName+" "+answer.LastName});else scope.localPilgrim="Empty"};return{link:link,scope:{},template:"{{localPilgrim}}",restrict:"E"}}]),angular.module("conf-room-tables").directive("confRoomTeamMemberName",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var link=function(scope,element,attrs){var nowWholeList=$resource("/whole-team-lists/"+attrs.memberid),answer=nowWholeList.get(function(){console.log(answer),scope.localTeamMember=answer.Name})};return{link:link,scope:{},restrict:"E",template:"{{localTeamMember}}"}}]),angular.module("conf-room-tables").factory("ConfRoomTables",["$resource",function($resource){return $resource("conf-room-tables/:confRoomTableId",{confRoomTableId:"@_id"},{update:{method:"PUT"}})}]),function(){angular.module("conf-room-tables").factory("ConfRoomTablesForm",["ConfRoomTablesMembers",function(ConfRoomTablesMembers){var getFormFields=function(disabled){var fields=[{key:"tableName",type:"input",templateOptions:{label:"Table:",disabled:disabled}},{key:"tableLeader",type:"select",templateOptions:{label:"Table Leader:",options:ConfRoomTablesMembers.getTableLeaders()}},{key:"assistantTableLeader",type:"select",templateOptions:{label:"Asst. Table Leader:",options:ConfRoomTablesMembers.getAssistantTableLeaders()}},{key:"pilgrim1",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}},{key:"pilgrim2",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}},{key:"pilgrim3",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}},{key:"pilgrim4",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}},{key:"pilgrim5",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}},{key:"pilgrim6",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}},{key:"pilgrim7",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}},{key:"pilgrim8",type:"select",templateOptions:{label:"Pilgrim:",options:ConfRoomTablesMembers.getPilgrims()}}];return fields},service={getFormFields:getFormFields};return service}])}(),angular.module("conf-room-tables").service("ConfRoomTablesMembers",function(){}).factory("ConfRoomTablesMembers",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var getTableLeaders=function(){var returnList=[],nowWholeList=$resource("/whole-team-lists?count=999&page=1"),answer=nowWholeList.get(function(){console.log(answer);for(var i=0;i<answer.total;i++){var value=[];"Table Leaders"==answer.results[i].Committee&&(value.name=answer.results[i].Name,value.value=answer.results[i]._id,returnList.push(value))}console.log(returnList)});return returnList},getAssistantTableLeaders=function(){var returnList=[],nowWholeList=$resource("/whole-team-lists?count=999&page=1"),answer=nowWholeList.get(function(){console.log(answer);for(var i=0;i<answer.total;i++){var value=[];"Asst. Table Ldrs."==answer.results[i].Committee&&(value.name=answer.results[i].Name,value.value=answer.results[i]._id,returnList.push(value))}console.log(returnList)});return returnList},getPilgrims=function(){var returnList=[],nowWholeList=$resource("/pilgrims?count=999&page=1"),noneValue=[];noneValue.name="Empty",noneValue.value="Empty",returnList.push(noneValue);var answer=nowWholeList.get(function(){console.log(answer);for(var i=0;i<answer.total;i++){var value=[];value.name=answer.results[i].FirstName+" "+answer.results[i].LastName,value.value=answer.results[i]._id,returnList.push(value)}console.log(returnList)});return returnList};return{getTableLeaders:getTableLeaders,getAssistantTableLeaders:getAssistantTableLeaders,getPilgrims:getPilgrims}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("ngReallyClick",["$modal",function($modal){var ModalInstanceCtrl=["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}];return{restrict:"A",scope:{ngReallyClick:"&"},link:function(scope,element,attrs){element.bind("click",function(){var message=attrs.ngReallyMessage||"Are you sure ?",modalHtml='<div class="modal-body">'+message+"</div>";modalHtml+='<div class="modal-footer"><button class="btn btn-primary" ng-click="ok()">OK</button><button class="btn btn-warning" ng-click="cancel()">Cancel</button></div>';var modalInstance=$modal.open({template:modalHtml,controller:ModalInstanceCtrl});modalInstance.result.then(function(){scope.ngReallyClick()},function(){})})}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),function(){function factory(ngTableParams){var getData=function(Entity){return function($defer,params){Entity.get(params.url(),function(response){params.total(response.total),$defer.resolve(response.results)})}},params={page:1,count:999},settings={total:0,counts:[5,10,15,999],filterDelay:0},tableParams=new ngTableParams(params,settings),getParams=function(Entity){return tableParams.settings({getData:getData(Entity)}),tableParams},service={getParams:getParams};return service}angular.module("core").factory("TableSettings",factory),factory.$inject=["ngTableParams"]}(),angular.module("pilgrim-rooms").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Pilgrim Rms","pilgrim-rooms","dropdown","/pilgrim-rooms(/create)?"),Menus.addSubMenuItem("topbar","pilgrim-rooms","List Pilgrim rooms","pilgrim-rooms"),Menus.addSubMenuItem("topbar","pilgrim-rooms","New Pilgrim room","pilgrim-rooms/create")}]),angular.module("pilgrim-rooms").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPilgrimRooms",{url:"/pilgrim-rooms",templateUrl:"modules/pilgrim-rooms/views/list-pilgrim-rooms.client.view.html"}).state("createPilgrimRoom",{url:"/pilgrim-rooms/create",templateUrl:"modules/pilgrim-rooms/views/create-pilgrim-room.client.view.html"}).state("viewPilgrimRoom",{url:"/pilgrim-rooms/:pilgrimRoomId",templateUrl:"modules/pilgrim-rooms/views/view-pilgrim-room.client.view.html"}).state("editPilgrimRoom",{url:"/pilgrim-rooms/:pilgrimRoomId/edit",templateUrl:"modules/pilgrim-rooms/views/edit-pilgrim-room.client.view.html"})}]),angular.module("pilgrim-rooms").controller("PilgrimRoomsController",["$scope","$stateParams","$location","Authentication","PilgrimRooms","TableSettings","PilgrimRoomsForm",function($scope,$stateParams,$location,Authentication,PilgrimRooms,TableSettings,PilgrimRoomsForm){$scope.authentication=Authentication,$scope.tableParams=TableSettings.getParams(PilgrimRooms),$scope.pilgrimRoom={},$scope.setFormFields=function(disabled){$scope.formFields=PilgrimRoomsForm.getFormFields(disabled)},$scope.cvsMe=function(tableData){var keysS=[];return angular.forEach(tableData[0],function(value,key){this.push(key)},keysS),console.log(keysS),tableData.unshift(keysS),tableData},$scope.create=function(){var pilgrimRoom=new PilgrimRooms($scope.pilgrimRoom);pilgrimRoom.$save(function(response){$location.path("pilgrim-rooms/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pilgrimRoom){pilgrimRoom?pilgrimRoom=PilgrimRooms.get({pilgrimRoomId:pilgrimRoom._id},function(){pilgrimRoom.$remove(),$scope.tableParams.reload()}):$scope.pilgrimRoom.$remove(function(){$location.path("pilgrimRooms")})},$scope.update=function(){var pilgrimRoom=$scope.pilgrimRoom;pilgrimRoom.$update(function(){$location.path("pilgrim-rooms/"+pilgrimRoom._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.toViewPilgrimRoom=function(){$scope.pilgrimRoom=PilgrimRooms.get({pilgrimRoomId:$stateParams.pilgrimRoomId}),$scope.setFormFields(!0)},$scope.toEditPilgrimRoom=function(){$scope.pilgrimRoom=PilgrimRooms.get({pilgrimRoomId:$stateParams.pilgrimRoomId}),$scope.setFormFields(!1)}}]),angular.module("pilgrim-rooms").directive("confRoomPilgrimMemberName",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var link=function(scope,element,attrs){if(attrs.memberid)if("Empty"==attrs.memberid)scope.localPilgrim="Empty";else var nowWholeList=$resource("/pilgrims/"+attrs.memberid),answer=nowWholeList.get(function(){console.log(answer),scope.localPilgrim=answer.FirstName+" "+answer.LastName});else scope.localPilgrim="Empty"};return{link:link,scope:{},template:"{{localPilgrim}}",restrict:"E"}}]),angular.module("conf-room-tables").directive("confRoomTeamMemberName",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var link=function(scope,element,attrs){var nowWholeList=$resource("/whole-team-lists/"+attrs.memberid),answer=nowWholeList.get(function(){console.log(answer),scope.localTeamMember=answer.Name})};return{link:link,scope:{},restrict:"E",template:"{{localTeamMember}}"}}]),angular.module("pilgrim-rooms").factory("PilgrimRooms",["$resource",function($resource){return $resource("pilgrim-rooms/:pilgrimRoomId",{pilgrimRoomId:"@_id"},{update:{method:"PUT"}})}]),function(){angular.module("pilgrim-rooms").factory("PilgrimRoomsForm",["ConfRoomTablesMembers",function(ConfRoomTablesMembers){var getFormFields=function(disabled){var fields=[{key:"TeamRoommate",type:"input",templateOptions:{label:"Team Roommate:",options:ConfRoomTablesMembers.getTeam()}},{key:"PilgrimRoommate1",type:"input",templateOptions:{label:"Pilgrim Roommate 1:",options:ConfRoomTablesMembers.getPilgrim()}},{key:"PilgrimRoommate2",type:"input",templateOptions:{label:"Pilgrim Roommate 2:",options:ConfRoomTablesMembers.getPilgrim()}},{key:"RoomNumber",type:"input",templateOptions:{label:"Room Number:",disabled:disabled}},{key:"UpDown",type:"input",templateOptions:{label:"Up Down:",disabled:disabled}},{key:"Building",type:"input",templateOptions:{label:"Building:",disabled:disabled}}];return fields},service={getFormFields:getFormFields};return service}])}(),angular.module("pilgrim-rooms").service("ConfRoomTablesMembers",function(){}).factory("ConfRoomTablesMembers",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var getTeam=function(){var returnList=[],nowWholeList=$resource("/whole-team-lists?count=999&page=1"),answer=nowWholeList.get(function(){console.log(answer);for(var i=0;i<answer.total;i++){var value=[];("Table Leaders"==answer.results[i].Committee||"Asst. Table Ldrs."==answer.results[i].Committee)&&(value.name=answer.results[i].Name,value.value=answer.results[i]._id,returnList.push(value))}console.log(returnList)});return returnList},getPilgrim=function(){var returnList=[],nowWholeList=$resource("/pilgrims?count=999&page=1"),noneValue=[];noneValue.name="Empty",noneValue.value="Empty",returnList.push(noneValue);var answer=nowWholeList.get(function(){console.log(answer);for(var i=0;i<answer.total;i++){var value=[];value.name=answer.results[i].FirstName+" "+answer.results[i].LastName,value.value=answer.results[i]._id,returnList.push(value)}console.log(returnList)});return returnList};return{getTeam:getTeam,getPilgrim:getPilgrim}}]),angular.module("pilgrims").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Pilgrims","pilgrims","button","/pilgrims"),Menus.addSubMenuItem("topbar","pilgrims","List Pilgrims","pilgrims"),Menus.addSubMenuItem("topbar","pilgrims","New Pilgrim","pilgrims/create")}]),angular.module("pilgrims").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPilgrims",{url:"/pilgrims",templateUrl:"modules/pilgrims/views/list-pilgrims.client.view.html"}).state("createPilgrim",{url:"/pilgrims/create",templateUrl:"modules/pilgrims/views/create-pilgrim.client.view.html"}).state("viewPilgrim",{url:"/pilgrims/:pilgrimId",templateUrl:"modules/pilgrims/views/view-pilgrim.client.view.html"}).state("editPilgrim",{url:"/pilgrims/:pilgrimId/edit",templateUrl:"modules/pilgrims/views/edit-pilgrim.client.view.html"})}]),angular.module("pilgrims").controller("PilgrimsController",["$scope","$stateParams","$location","Authentication","Pilgrims","TableSettings","PilgrimsForm",function($scope,$stateParams,$location,Authentication,Pilgrims,TableSettings,PilgrimsForm){$scope.authentication=Authentication,$scope.tableParams=TableSettings.getParams(Pilgrims),$scope.pilgrim={},$scope.setFormFields=function(disabled){$scope.formFields=PilgrimsForm.getFormFields(disabled)},$scope.cvsMe=function(tableData){var keysS=[];return angular.forEach(tableData[0],function(value,key){this.push(key)},keysS),console.log(keysS),tableData.unshift(keysS),tableData},$scope.create=function(){var pilgrim=new Pilgrims($scope.pilgrim);pilgrim.$save(function(response){$location.path("pilgrims/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pilgrim){pilgrim?pilgrim=Pilgrims.get({pilgrimId:pilgrim._id},function(){pilgrim.$remove(),$scope.tableParams.reload()}):$scope.pilgrim.$remove(function(){$location.path("pilgrims")})},$scope.update=function(){var pilgrim=$scope.pilgrim;pilgrim.$update(function(){$location.path("pilgrims/"+pilgrim._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.toViewPilgrim=function(){$scope.pilgrim=Pilgrims.get({pilgrimId:$stateParams.pilgrimId}),$scope.setFormFields(!0)},$scope.toEditPilgrim=function(){$scope.pilgrim=Pilgrims.get({pilgrimId:$stateParams.pilgrimId}),$scope.setFormFields(!1)}}]),angular.module("pilgrims").factory("Pilgrims",["$resource",function($resource){return $resource("pilgrims/:pilgrimId",{pilgrimId:"@_id"},{update:{method:"PUT"}})}]),function(){function factory(){var getFormFields=function(disabled){var fields=[{key:"FirstName",type:"input",templateOptions:{label:"First Name:",disabled:disabled}},{key:"LastName",type:"input",templateOptions:{label:"Last Name:",disabled:disabled}},{key:"Street_Address",type:"input",templateOptions:{label:"Street Address:",disabled:disabled}},{key:"City_State_Zip",type:"input",templateOptions:{label:"City State, Zip:",disabled:disabled}},{key:"Church",type:"input",templateOptions:{label:"Church:",disabled:disabled}},{key:"Age",type:"input",templateOptions:{label:"Age:",disabled:disabled}},{key:"Special",type:"input",templateOptions:{label:"Special Info:",disabled:disabled}},{key:"Room_Mate1",type:"input",templateOptions:{label:"Room Mate 1:",disabled:disabled}},{key:"Room_Mate2",type:"input",templateOptions:{label:"Room Mate 2:",disabled:disabled}},{key:"Paid",type:"radio",templateOptions:{label:"Paid:",disabled:disabled,options:[{name:"Yes",value:"Yes"},{name:"No",value:"No"}]}},{key:"Amount_Paid",type:"input",templateOptions:{label:"Amount Recived:",disabled:disabled}},{key:"Amount_Due",type:"input",templateOptions:{label:"Amount Due:",disabled:disabled}},{key:"CheckNumber",type:"input",templateOptions:{label:"Check Number:",disabled:disabled}},{key:"RoomNumber",type:"input",templateOptions:{label:"Room Number:",disabled:disabled}},{key:"HomeCluster",type:"input",templateOptions:{label:"Home Cluster:",disabled:disabled}}];return fields},service={getFormFields:getFormFields};return service}angular.module("pilgrims").factory("PilgrimsForm",factory)}(),angular.module("team-rooms").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Team Rms","team-rooms","dropdown","/team-rooms(/create)?"),Menus.addSubMenuItem("topbar","team-rooms","List Team rooms","team-rooms"),Menus.addSubMenuItem("topbar","team-rooms","New Team room","team-rooms/create")}]),angular.module("team-rooms").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTeamRooms",{url:"/team-rooms",templateUrl:"modules/team-rooms/views/list-team-rooms.client.view.html"}).state("createTeamRoom",{url:"/team-rooms/create",templateUrl:"modules/team-rooms/views/create-team-room.client.view.html"}).state("viewTeamRoom",{url:"/team-rooms/:teamRoomId",templateUrl:"modules/team-rooms/views/view-team-room.client.view.html"}).state("editTeamRoom",{url:"/team-rooms/:teamRoomId/edit",templateUrl:"modules/team-rooms/views/edit-team-room.client.view.html"})}]),angular.module("team-rooms").controller("TeamRoomsController",["$scope","$stateParams","$location","Authentication","TeamRooms","TableSettings","TeamRoomsForm",function($scope,$stateParams,$location,Authentication,TeamRooms,TableSettings,TeamRoomsForm){$scope.authentication=Authentication,$scope.tableParams=TableSettings.getParams(TeamRooms),$scope.teamRoom={},$scope.setFormFields=function(disabled){$scope.formFields=TeamRoomsForm.getFormFields(disabled)},$scope.cvsMe=function(tableData){var keysS=[];return angular.forEach(tableData[0],function(value,key){this.push(key)},keysS),console.log(keysS),tableData.unshift(keysS),tableData},$scope.create=function(){var teamRoom=new TeamRooms($scope.teamRoom);teamRoom.$save(function(response){$location.path("team-rooms/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(teamRoom){teamRoom?teamRoom=TeamRooms.get({teamRoomId:teamRoom._id},function(){teamRoom.$remove(),$scope.tableParams.reload()}):$scope.teamRoom.$remove(function(){$location.path("teamRooms")})},$scope.update=function(){var teamRoom=$scope.teamRoom;teamRoom.$update(function(){$location.path("team-rooms/"+teamRoom._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.toViewTeamRoom=function(){$scope.teamRoom=TeamRooms.get({teamRoomId:$stateParams.teamRoomId}),$scope.setFormFields(!0)},$scope.toEditTeamRoom=function(){$scope.teamRoom=TeamRooms.get({teamRoomId:$stateParams.teamRoomId}),$scope.setFormFields(!1)}}]),angular.module("team-rooms").directive("confRoomTeamMemberName",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var link=function(scope,element,attrs){var nowWholeList=$resource("/whole-team-lists/"+attrs.memberid),answer=nowWholeList.get(function(){console.log(answer),scope.localTeamMember=answer.Name})};return{link:link,scope:{},restrict:"E",template:"{{localTeamMember}}"}}]),angular.module("team-rooms").factory("TeamRooms",["$resource",function($resource){return $resource("team-rooms/:teamRoomId",{teamRoomId:"@_id"},{update:{method:"PUT"}})}]),function(){angular.module("team-rooms").factory("TeamRoomsForm",["ConfRoomTablesMembers",function(ConfRoomTablesMembers){var getFormFields=function(disabled){var fields=[{key:"Roommate1",type:"select",templateOptions:{label:"Roommate 1:",options:ConfRoomTablesMembers.getTeamRetreat()}},{key:"Roommate2",type:"select",templateOptions:{label:"Roommate 2:",options:ConfRoomTablesMembers.getTeamRetreat()}},{key:"RoomNumber",type:"input",templateOptions:{label:"Room Number:",disabled:disabled}},{key:"Building",type:"input",templateOptions:{label:"Building:",disabled:disabled}}];return fields},service={getFormFields:getFormFields};return service}])}(),angular.module("team-rooms").service("ConfRoomTablesMembers",function(){}).factory("ConfRoomTablesMembers",["WholeTeamLists","TableSettings","Pilgrims","$resource",function(WholeTeamLists,TableSettings,Pilgrims,$resource){var getTeamRetreat=function(){var returnList=[],nowWholeList=$resource("/whole-team-lists?count=999&page=1"),answer=nowWholeList.get(function(){console.log(answer);for(var i=0;i<answer.total;i++){var value=[];"Retreat Center"==answer.results[i].Building&&(value.name=answer.results[i].Name,value.value=answer.results[i]._id,returnList.push(value))}console.log(returnList)});return returnList};return{getTeamRetreat:getTeamRetreat}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0;
},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("whole-team-lists").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Whole","whole-team-lists","button","/whole-team-lists"),Menus.addSubMenuItem("topbar","whole-team-lists","List Whole team lists","whole-team-lists"),Menus.addSubMenuItem("topbar","whole-team-lists","List Paid team lists","paid-team-lists"),Menus.addMenuItem("topbar","Pd.","paid-team-lists","button","/paid-team-lists"),Menus.addMenuItem("topbar","Summary RC","paid-team-summary-lists","button","/paid-team-summary-lists")}]),angular.module("whole-team-lists").config(["$stateProvider",function($stateProvider){$stateProvider.state("listWholeTeamLists",{url:"/whole-team-lists",templateUrl:"modules/whole-team-lists/views/list-whole-team-lists.client.view.html"}).state("listPaidTeamLists",{url:"/paid-team-lists",templateUrl:"modules/whole-team-lists/views/list-paid-team-lists.client.view.html"}).state("listPaidTeamSummaryLists",{url:"/paid-team-summary-lists",templateUrl:"modules/whole-team-lists/views/list-paid-team-summary-lists.client.view.html"}).state("createWholeTeamList",{url:"/whole-team-lists/create",templateUrl:"modules/whole-team-lists/views/create-whole-team-list.client.view.html"}).state("viewWholeTeamList",{url:"/whole-team-lists/:wholeTeamListId",templateUrl:"modules/whole-team-lists/views/view-whole-team-list.client.view.html"}).state("editWholeTeamList",{url:"/whole-team-lists/:wholeTeamListId/edit",templateUrl:"modules/whole-team-lists/views/edit-whole-team-list.client.view.html"})}]),angular.module("whole-team-lists").controller("WholeTeamListsController",["$scope","$stateParams","$location","Authentication","WholeTeamLists","TableSettings","WholeTeamListsForm",function($scope,$stateParams,$location,Authentication,WholeTeamLists,TableSettings,WholeTeamListsForm){$scope.authentication=Authentication,$scope.tableParams=TableSettings.getParams(WholeTeamLists),$scope.wholeTeamList={},$scope.retreatCenterAll=function(stuff){var sumValue=0;if(0==stuff.length)return 0;for(var i=0;i<stuff.length;i++)"Retreat Center"==stuff[i].Building&&sumValue++;return sumValue},$scope.retreatCenterPaid=function(stuff){var sumValue=0;if(0==stuff.length)return 0;for(var i=0;i<stuff.length;i++)"Retreat Center"==stuff[i].Building&&"Yes"==stuff[i].Paid&&sumValue++;return sumValue},$scope.retreatCenterPaidWithRoomMate=function(stuff){var sumValue=0;if(0==stuff.length)return 0;for(var i=0;i<stuff.length;i++){var value=stuff[i];"Retreat Center"==stuff[i].Building&&"Yes"==stuff[i].Paid&&0!=value.Roommate.length&&sumValue++}return sumValue},$scope.retreatCenterPaidWithOutRoomMate=function(stuff){var sumValue=0;if(0==stuff.length)return 0;for(var i=0;i<stuff.length;i++){var value=stuff[i];"Retreat Center"==stuff[i].Building&&"Yes"==stuff[i].Paid&&0==value.Roommate.length&&sumValue++}return sumValue},$scope.retreatCenterNeedRoomMate=function(stuff){var sumValue=" ";if(0==stuff.length)return" ";for(var i=0;i<stuff.length;i++){var value=stuff[i];"Retreat Center"==stuff[i].Building&&"Yes"==stuff[i].Paid&&0==value.Roommate.length&&(sumValue+=value.Name+",")}return sumValue},$scope.cvsMe=function(tableData){var keysS=[];return angular.forEach(tableData[0],function(value,key){this.push(key)},keysS),console.log(keysS),tableData.unshift(keysS),tableData},$scope.totalUnPaid=function(stuff){var sumValue=0;if(0==stuff.length)return 0;for(var i=0;i<stuff.length;i++)"No"==stuff[i].Paid&&sumValue++;return sumValue},$scope.setFormFields=function(disabled){$scope.formFields=WholeTeamListsForm.getFormFields(disabled)},$scope.create=function(){var wholeTeamList=new WholeTeamLists($scope.wholeTeamList);wholeTeamList.$save(function(response){$location.path("whole-team-lists/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(wholeTeamList){wholeTeamList?wholeTeamList=WholeTeamLists.get({wholeTeamListId:wholeTeamList._id},function(){wholeTeamList.$remove(),$scope.tableParams.reload()}):$scope.wholeTeamList.$remove(function(){$location.path("wholeTeamLists")})},$scope.update=function(){var wholeTeamList=$scope.wholeTeamList;wholeTeamList.$update(function(){$location.path("whole-team-lists/"+wholeTeamList._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.toViewWholeTeamList=function(){$scope.wholeTeamList=WholeTeamLists.get({wholeTeamListId:$stateParams.wholeTeamListId}),$scope.setFormFields(!0)},$scope.toEditWholeTeamList=function(){$scope.wholeTeamList=WholeTeamLists.get({wholeTeamListId:$stateParams.wholeTeamListId}),$scope.setFormFields(!1)}}]),angular.module("whole-team-lists").factory("WholeTeamLists",["$resource",function($resource){return $resource("whole-team-lists/:wholeTeamListId",{wholeTeamListId:"@_id"},{update:{method:"PUT"}})}]),function(){function factory(){var getFormFields=function(disabled){var fields=[{key:"Name",type:"input",templateOptions:{label:"Name:",disabled:disabled}},{key:"Committee",type:"input",templateOptions:{label:"Committee:",disabled:disabled}},{key:"Paid",type:"radio",templateOptions:{label:"Paid:",disabled:disabled,options:[{name:"Yes",value:"Yes"},{name:"No",value:"No"}]}},{key:"PaidAmount",type:"input",templateOptions:{label:"Paid Amount:",disabled:disabled}},{key:"Roommate",type:"input",templateOptions:{label:"Roommate:",disabled:disabled}},{key:"Building",type:"select",templateOptions:{label:"Building:",disabled:disabled,options:[{name:"Retreat Center",value:"Retreat Center"},{name:"Campers",value:"Campers"},{name:"None",value:"None"},{name:"Main Lodge - East Wing",value:"Main Lodge - East Wing"}]}},{key:"Chairperson",type:"input",templateOptions:{label:"Chairperson:",disabled:disabled}},{key:"Talk",type:"input",templateOptions:{label:"Talk:",disabled:disabled}},{key:"Phone",type:"input",templateOptions:{label:"Phone:",disabled:disabled}},{key:"Email",type:"input",templateOptions:{label:"Email:",disabled:disabled}},{key:"Street_Address",type:"input",templateOptions:{label:"Street Address:",disabled:disabled}},{key:"City_State_Zip",type:"input",templateOptions:{label:"City, State, Zip:",disabled:disabled}}];return fields},service={getFormFields:getFormFields};return service}angular.module("whole-team-lists").factory("WholeTeamListsForm",factory)}();